server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name www.seointro.de seointro.de;
    return 301 https://seointro.de$request_uri;
}

upstream my_nodejs_upstream {
    server 127.0.0.1:3005;
    keepalive 64;
}

upstream client_upstream {
    server 127.0.0.1:8005;
}

server {
	listen [::]:443 ssl ipv6only=on http2; 
    listen 443 ssl http2; 
	server_name seointro.de www.seointro.de;

    if ($host = www.seointro.de) {
        return 301 https://seointro.de$request_uri;
    }

    ssl_certificate /etc/letsencrypt/live/seointro.de/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/seointro.de/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    gzip on;
    gzip_types text/plain text/css text/javascript image/svg+xml image/x-icon application/javascript application/x-javascript;
    gzip_min_length 1024;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://client_upstream;
    }

    location /api/ {
    	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    	proxy_set_header Host $http_host;
        
    	proxy_http_version 1.1;
    	proxy_set_header Upgrade $http_upgrade;
    	proxy_set_header Connection "upgrade";
        
    	proxy_pass http://my_nodejs_upstream/;
    	proxy_redirect off;
    	proxy_read_timeout 240s;
    }
}
